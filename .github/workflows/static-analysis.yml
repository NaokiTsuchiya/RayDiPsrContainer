name: Static Analysis

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
  workflow_dispatch:

env:
  PHP_VERSION: '8.3'
  TOOLS_BIN_PATH: 'vendor-bin/tool/vendor/bin'
  LOCK_FILE: ${{ hashFiles('vendor-bin/tools/composer.lock') }}

jobs:
  static-analysis-phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "$PHP_VERSION"
          tools: cs2pr
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: "${{ runner.os }}-composer-$LOCK_FILE"
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Run PHPStan
        run: $TOOLS_BIN_PATH/phpstan analyse -c phpstan.neon.dist --no-progress --no-interaction --error-format=checkstyle | cs2pr

  static-analysis-psalm:
    name: Psalm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "$PHP_VERSION"
          tools: cs2pr
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: "${{ runner.os }}-composer-$LOCK_FILE"
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Run Psalm
        run: $TOOLS_BIN_PATH/psalm --show-info=false --output-format=checkstyle --shepherd | cs2pr

  static-analysis-phpmd:
    name: PHPMD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "$PHP_VERSION"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: "${{ runner.os }}-composer-$LOCK_FILE"
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Run PHP Mess Detector
        run: $TOOLS_BIN_PATH/phpmd src github phpmd.xml

  static-analysis-composer-require-checker:
    name: ComposerRequireChecker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "$PHP_VERSION"
          coverage: none
          tools: composer-require-checker

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Run composer-require-checker
        run: composer-require-checker check composer.json
