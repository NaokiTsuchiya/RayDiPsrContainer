name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release ${{ inputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Remove optional "v" prefix
        id: version
        run: |
          echo "version=${VERSION#v}" >> "$GITHUB_OUTPUT"
        env:
          VERSION: ${{ inputs.version }}

      - name: Extract branch major version
        id: extract_branch_major_version
        run: |
          if [[ "${GITHUB_REF_NAME}" =~ ^([0-9]+)\. ]]; then
            echo "branch_major_version=${BASH_REMATCH[1]}" >> "$GITHUB_OUTPUT"
          else
            echo "Error: Unable to determine branch version." >&2
            exit 1
          fi
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

      - name: Check version compatibility
        id: guard
        run: |
          semver_regex="^[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9]+(\\.[a-zA-Z0-9]+)*)?(\\+[a-zA-Z0-9]+)?$"

          if [[ ! "${VERSION}" =~ $semver_regex ]]; then
            echo "Error: Version '${VERSION}' is not in valid Semantic Versioning (SemVer) format."
            exit 1
          fi

          if [[ ! "${VERSION}" =~ ^"${BRANCH_MAJOR_VERSION}\." ]]; then
            echo "Error: Branch '${GITHUB_REF_NAME}' can only release versions starting with '${BRANCH_MAJOR_VERSION}.'"
            exit 1
          fi
          echo "Version is compatible with branch."
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
          VERSION: ${{ steps.version.outputs.version }}
          BRANCH_MAJOR_VERSION: ${{ steps.extract_branch_major_version.outputs.branch_major_version }}

      - name: Release
        id: release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          generate_release_notes: true
          target_commitish: ${{ github.ref_name }}
          make_latest: "${{ github.ref_name == github.event.repository.default_branch }}"
