name: Continuous Integration

on:
  push:
    branches:
      - main
      - '*.x'
  pull_request:
  workflow_dispatch:

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist --no-plugins"
  COMPOSER_UPDATE_FLAGS: ""

jobs:
  phpunit:
    name: PHPUnit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php:
          - 8.0
          - 8.1
          - 8.2
          - 8.3
          - 8.4
        dependencies:
          - highest
          - lowest
        os:
          - ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          ini-values: |
            zend.assertions=1
            memory_limit=512M
            opcache.jit=0
            opcache.jit_buffer_size=0
            opcache.enable=0
            opcache.enable_cli=0

      - name: Get composer cache directory
        id: composer-cache
        shell: bash
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('composer.json', 'composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php${{ matrix.php }}-composer-
            ${{ runner.os }}-composer-

      - name: Set platform requirements
        shell: bash
        run: |
          composer config platform.php ${{ matrix.php }}

      - name: Handle lowest dependencies update
        if: matrix.dependencies == 'lowest'
        shell: bash
        run: echo COMPOSER_UPDATE_FLAGS="$COMPOSER_UPDATE_FLAGS --prefer-lowest" >> $GITHUB_ENV

      - name: Remove platform config for dependency resolution
        if: matrix.dependencies == 'highest'
        shell: bash
        run: composer config platform --unset

      - name: Update dependencies
        shell: bash
        run: |
          composer validate --no-check-all --strict
          composer update ${{ env.COMPOSER_UPDATE_FLAGS }} ${{ env.COMPOSER_FLAGS }}

      - name: Run test suite
        shell: bash
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false  # Don't fail if coverage upload fails
